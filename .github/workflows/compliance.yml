name: Compliance Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  predeploy:
    name: Pre-Deployment Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Run unit tests with coverage
        run: pnpm coverage -- --reporter=dot

      - name: Upload coverage (if exists)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: |
            coverage
          if-no-files-found: ignore

      - name: Run predeploy checks
        run: make predeploy

      - name: Generate milestone summary
        run: |
          mkdir -p .reports
          node scripts/summarize-milestones.js
          cat .reports/milestones-summary.md >> "$GITHUB_STEP_SUMMARY"

      - name: Upload milestones summary
        uses: actions/upload-artifact@v4
        with:
          name: milestones-summary
          path: |
            .reports/milestones-summary.md
            .reports/milestones-summary.json

      - name: Upload predeploy report
        uses: actions/upload-artifact@v4
        with:
          name: predeploy-report
          path: .reports/predeploy-*.json

      - name: Link Compliance Doc
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ## üìã Compliance Playbook
          See [COMPLIANCE.md](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/COMPLIANCE.md)
          EOF

  deploy:
    name: Vercel Deployment
    runs-on: ubuntu-latest
    needs: predeploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          working-directory: ./apps/gtek-web
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Link Compliance Doc
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ## üöÄ Deployment Completed
          Compliance steps documented in [COMPLIANCE.md](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/COMPLIANCE.md)
          EOF

  postdeploy:
    name: Post-Deployment Checks
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate

      - name: Run postdeploy checks
        run: make postdeploy
        env:
          POSTDEPLOY_URL: https://gtek.world

      - name: Upload postdeploy report
        uses: actions/upload-artifact@v4
        with:
          name: postdeploy-report
          path: .reports/postdeploy-*.json

      - name: Link Compliance Doc
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ## üîé Post-Deployment Validation
          Refer to [COMPLIANCE.md](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/COMPLIANCE.md)
          EOF

  runtime-governance:
    name: Runtime Governance Checks
    runs-on: ubuntu-latest
    needs: postdeploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Postgres client
        run: sudo apt-get install -y postgresql-client

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Verify user roles
        run: psql ${{ secrets.DATABASE_URL }} -c "select distinct role from memberships;"

      - name: Audit log test
        run: curl -s -X POST https://gtek.world/api/ipfs/pin -d '{"cid":"QmTest","crid":"CRID-1234"}'

      - name: Rate limit stress test
        run: |
          for i in {1..70}; do curl -s -o /dev/null -w "%{http_code}\n" https://gtek.world/api/health; done

      - name: Summarize rate limit events (last 1h)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
        run: |
          if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_SERVICE_ROLE" ]; then
            echo "Supabase envs not set; skipping audit summary" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          echo "## ‚è±Ô∏è Rate Limit Events (last 1h)" >> $GITHUB_STEP_SUMMARY
          curl -s "$SUPABASE_URL/rest/v1/audit_logs?select=created_at,action,meta&action=eq.rate.limit&created_at=gt.$(date -u -d '-1 hour' +%Y-%m-%dT%H:%M:%SZ)" \
            -H "apikey: $SUPABASE_SERVICE_ROLE" -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE" \
            | jq -r '.[] | "- [\(.created_at)] action=\(.action) ip=\(.meta.ip) path=\(.meta.path) count=\(.meta.count) limit=\(.meta.limit)"' >> $GITHUB_STEP_SUMMARY || true

      - name: Backup DB
        run: pg_dump ${{ secrets.DATABASE_URL }} > db-backup.sql

      - name: Upload governance artifacts
        uses: actions/upload-artifact@v4
        with:
          name: governance-artifacts
          path: db-backup.sql

      - name: Summarize audit log activity
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          AUDIT_WINDOW_HOURS: 6
        run: |
          BASE_URL="${SUPABASE_URL:-$NEXT_PUBLIC_SUPABASE_URL}"
          if [ -z "$BASE_URL" ] || [ -z "$SUPABASE_SERVICE_ROLE" ]; then
            {
              echo "## Governance Summary"
              echo "‚ö†Ô∏è Supabase credentials are not configured; skipping audit log summary."
            } >> "$GITHUB_STEP_SUMMARY"
            exit 0
          fi

          HOURS=${AUDIT_WINDOW_HOURS:-6}
          if command -v gdate >/dev/null 2>&1; then
            SINCE=$(gdate -u -d "-$HOURS hours" +%Y-%m-%dT%H:%M:%SZ)
          else
            SINCE=$(date -u -d "-$HOURS hours" +%Y-%m-%dT%H:%M:%SZ)
          fi

          echo "## Governance Summary (last ${HOURS}h)" >> "$GITHUB_STEP_SUMMARY"
          curl -s "$BASE_URL/rest/v1/audit_logs?select=action&created_at=gte.$SINCE" \
            -H "apikey: $SUPABASE_SERVICE_ROLE" -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE" \
            | jq -r '[.[].action] | group_by(.) | map({action:.[0], count:length}) | sort_by(-.count) | ("| Action | Count |"), ("| --- | --- |"), (.[] | "| \(.action) | \(.count) |")' \
            >> "$GITHUB_STEP_SUMMARY" || true

      - name: Link Compliance Doc
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ## üîê Runtime Governance Completed
          See [COMPLIANCE.md](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/COMPLIANCE.md)
          EOF

  e2e-smoke:
    name: E2E Smoke (Playwright)
    runs-on: ubuntu-latest
    needs: postdeploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright against prod URL
        env:
          PLAYWRIGHT_BASE_URL: https://gtek.world
        run: npx playwright test -c playwright.config.ts

      - name: Link Compliance Doc
        run: |
          cat <<EOF >> "$GITHUB_STEP_SUMMARY"
          ## ‚úÖ E2E Smoke Tests
          Playwright smoke tests ran against https://gtek.world. See logs above.
          EOF
